version: '3.8' #docker-compose 버전 지정
services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch1
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.seed_hosts=elasticsearch2:9300,elasticsearch3:9300
      - cluster.name=bt-cluster
      - node.name=elasticsearch1
      - node.roles=data
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=1016
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - cluster.initial_master_nodes=elasticsearch2,elasticsearch3
      - path.data=/usr/share/elasticsearch/data
    volumes:
      - elasticsearch-data1:/usr/share/elasticsearch/data
      - ./data/init:/usr/share/elasticsearch/init
      - ./data/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - elk_network
    entrypoint: [ "/bin/bash", "-c", "/usr/share/elasticsearch/init/create_indices.sh && /usr/share/elasticsearch/bin/elasticsearch" ]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 4g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      elasticsearch2:
        condition: service_healthy
      elasticsearch3:
        condition: service_healthy

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch2
    environment:
      - discovery.seed_hosts=elasticsearch1:9300,elasticsearch3:9300
      - cluster.name=bt-cluster
      - node.name=elasticsearch2
      - node.roles=master, data
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=1016
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - cluster.initial_master_nodes=elasticsearch2,elasticsearch3
    volumes:
      - elasticsearch-data2:/usr/share/elasticsearch/data
    networks:
      - elk_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      retries: 5

  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch3
    environment:
      - discovery.seed_hosts=elasticsearch1:9300,elasticsearch2:9300
      - cluster.name=bt-cluster
      - node.name=elasticsearch3
      - node.roles=master, data
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=1016
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - cluster.initial_master_nodes=elasticsearch2,elasticsearch3
    volumes:
      - elasticsearch-data3:/usr/share/elasticsearch/data
    networks:
      - elk_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      retries: 5

  # Kibana 추가
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: kibana
    ports:
      - "5601:5601"  # Kibana UI 접속 포트
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch1:9200","http://elasticsearch2:9201"]
#      - ELASTICSEARCH_USERNAME=btnosql
#      - ELASTICSEARCH_PASSWORD=1016  # elastic 사용자의 비밀번호
    networks:
      - elk_network
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"


  postgres:
    image: postgres:latest
    container_name: postgresSQL
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: btrdb
      POSTGRES_USER: btuser
      POSTGRES_PASSWORD: 1016

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"

  jenkins:
    image: jenkins/jenkins:latest
    container_name: jenkins
    ports:
      - "8080:8080"  # HTTP
      - "8443:8443"  # HTTPS
      - "50000:50000"  # Jenkins slave
    volumes:
      - jenkins_home:/var/jenkins_home  # Jenkins 데이터 유지
      - /var/run/docker.sock:/var/run/docker.sock  # Docker API 연동
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false" # 초기 설정 비활성화 (선택사황)
    networks:
      - jenkins_network

# Cerebro - 엘라스칙 서치 클러스터의 상태 확인과 관리를 도와주는 서드파티 솔루션.
volumes:
  jenkins_home:
  elasticsearch-data1:
  elasticsearch-data2:
  elasticsearch-data3:
networks:
  jenkins_network:
    driver: bridge
  elk_network:
    driver: bridge
