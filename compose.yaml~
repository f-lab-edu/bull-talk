version: '3.8' #docker-compose 버전 지정
services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch1
    ports:
      - "9200:9200"  # HTTP API
      - "9300:9300"  # 클러스터 통신
    environment:
      - discovery.seed_hosts=elasticsearch2:9300  # 다른 노드를 알 수 있도록 설정
      - cluster.name=bt-cluster  # 클러스터 이름
      - node.name=elasticsearch1  # 첫 번째 서버 이름
      - xpack.security.enabled=false  # 보안 비활성화
      - ELASTIC_PASSWORD=1016  # elastic 사용자 비밀번호 설정
      - ES_JAVA_OPTS=-Xms2g -Xmx2g  # 올바른 JVM 옵션 형식
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elk_network
#  elasticsearch2:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
#    container_name: elasticsearch2
#    ports:
#      - "9201:9200"  # HTTP API
#      - "9301:9300"  # 클러스터 통신
#    environment:
#      - discovery.seed_hosts=elasticsearch1:9300  # 첫 번째 서버를 알 수 있도록 설정
#      - cluster.name=bt-cluster  # 동일한 클러스터 이름
#      - node.name=elasticsearch2  # 두 번째 서버 이름
#      - xpack.security.enabled=false  # 보안 비활성화
#      - ES_JAVA_OPTS=-Xms2g -Xmx2g
#    networks:
#      - elk_network
  # Kibana 추가
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: kibana
    ports:
      - "5601:5601"  # Kibana UI 접속 포트
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch1:9200","http://elasticsearch2:9201"]
#      - ELASTICSEARCH_USERNAME=btnosql
#      - ELASTICSEARCH_PASSWORD=1016  # elastic 사용자의 비밀번호
    networks:
      - elk_network
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"


  postgres:
    image: postgres:latest
    container_name: postgresSQL
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: btrdb
      POSTGRES_USER: btuser
      POSTGRES_PASSWORD: 1016

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"

  jenkins:
    image: jenkins/jenkins:latest
    container_name: jenkins
    ports:
      - "8080:8080"  # HTTP
      - "8443:8443"  # HTTPS
      - "50000:50000"  # Jenkins slave
    volumes:
      - jenkins_home:/var/jenkins_home  # Jenkins 데이터 유지
      - /var/run/docker.sock:/var/run/docker.sock  # Docker API 연동
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false" # 초기 설정 비활성화 (선택사황)
    networks:
      - jenkins_network

volumes:
  jenkins_home:
  elasticsearch-data:
networks:
  jenkins_network:
    driver: bridge
  elk_network:
    driver: bridge
